{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/slip-list/slip-list.component.html","webpack:///./src/app/components/slip-list/slip-list.component.scss","webpack:///./src/app/components/slip-list/slip-list.component.ts","webpack:///./src/app/mock/mock-lists.ts","webpack:///./src/app/service/list.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<h1>{{ title | uppercase }}</h1>\\n<app-slip-list [lists]=\\\"lists\\\" (update)=\\\"updateList($event)\\\" (delete)=\\\"deleteList($event)\\\"></app-slip-list>\\n\"","module.exports = \"h1 {\\n  text-align: center; }\\n\"","import { Component, OnInit } from '@angular/core';\n\nimport { ListService } from './service/list.service';\n\nimport List from './models/list';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n\n  public title = 'angular slip list';\n\n  public lists: Array<any>;\n\n  constructor(\n    private listService: ListService,\n  ) { }\n\n  ngOnInit() {\n    this.listService.getLists().subscribe(lists => this.lists = lists);\n  }\n\n  public updateList(list: List) {\n    this.listService.update(list);\n  }\n\n  public deleteList(list: List) {\n    this.listService.delete(list).subscribe(lists => this.lists = lists);\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\n\nimport { AppComponent } from './app.component';\nimport { SlipListComponent } from './components/slip-list/slip-list.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SlipListComponent,\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n    FontAwesomeModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"<ul class=\\\"slip-list\\\">\\n  <li class=\\\"list\\\" [id]=\\\"list.name\\\" [ngClass]=\\\"{ select : list.select }\\\" *ngFor=\\\"let list of lists\\\">\\n    <div class=\\\"list-view\\\" (click)=\\\"onSelect(list)\\\">\\n      <div class=\\\"list-row\\\">\\n        <div class=\\\"list-name\\\">{{ list.name }}</div>\\n        <div class=\\\"list-time\\\">{{ list.time }}</div>\\n      </div>\\n      <div class=\\\"list-message\\\">{{ list.message }}</div>\\n    </div>\\n    <a class=\\\"list-delete\\\" href=\\\"#\\\" (click)=\\\"onDelete(list)\\\"><fa-icon [icon]=\\\"faTrashAlt\\\" size=\\\"2x\\\"></fa-icon></a>\\n  </li>\\n</ul>\\n\"","module.exports = \".slip-list {\\n  overflow: hidden;\\n  margin: 0;\\n  padding: 0;\\n  width: 350px;\\n  min-height: 30px;\\n  font-size: 1rem;\\n  font-family: 'Microsoft JhengHei', sans-serif;\\n  border: 8px solid #444;\\n  border-radius: 1rem;\\n  list-style: none; }\\n  .slip-list .list {\\n    position: relative;\\n    width: inherit;\\n    height: 80px;\\n    transition: all 0.4s ease; }\\n  .slip-list .list.select .list-view {\\n      left: -80px; }\\n  .slip-list .list.select .list-view .list-time {\\n        opacity: 0;\\n        transition: all 0.5s ease; }\\n  .slip-list .list .list-view {\\n      overflow: hidden;\\n      position: absolute;\\n      top: 0;\\n      left: 0;\\n      padding: 1rem;\\n      width: calc(100% - 2rem);\\n      background-color: #fff;\\n      z-index: 1;\\n      transition: all 0.5s ease; }\\n  .slip-list .list .list-view:hover {\\n        background-color: #fafafa; }\\n  .slip-list .list .list-view .list-row {\\n        display: flex;\\n        justify-content: space-between;\\n        margin: 0.2rem 0; }\\n  .slip-list .list .list-view .list-row .list-name {\\n          font-weight: bold; }\\n  .slip-list .list .list-view .list-row .list-time {\\n          font-size: 0.8rem;\\n          color: #ccc; }\\n  .slip-list .list .list-view .list-message {\\n        overflow: hidden;\\n        width: 80%;\\n        font-size: 0.9rem;\\n        text-overflow: ellipsis;\\n        white-space: nowrap;\\n        color: #999;\\n        cursor: default;\\n        opacity: 1; }\\n  .slip-list .list .list-delete {\\n      position: absolute;\\n      top: 0;\\n      right: 0;\\n      display: flex;\\n      align-items: center;\\n      justify-content: center;\\n      width: 80px;\\n      height: inherit;\\n      text-align: center;\\n      text-decoration: none;\\n      color: #fff;\\n      background-color: #ff1c57; }\\n\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\n\nimport List from '../../models/list';\n\n@Component({\n  selector: 'app-slip-list',\n  templateUrl: './slip-list.component.html',\n  styleUrls: ['./slip-list.component.scss']\n})\nexport class SlipListComponent implements OnInit {\n\n  public faTrashAlt = faTrashAlt;\n\n  @Input() public lists: Array<List>;\n\n  @Output() public update: EventEmitter<List> = new EventEmitter();\n\n  @Output() public delete: EventEmitter<List> = new EventEmitter();\n\n  constructor() { }\n\n  ngOnInit() { }\n\n  public onSelect(list: List): void {\n    this.update.emit(list);\n  }\n\n  public onDelete(list: List): void {\n    document.getElementById(list.name).style.height = '0';\n    setTimeout(() => this.delete.emit(list), 400);\n  }\n\n}\n","import List from '../models/list';\n\nconst MockLists: Array<List> = [\n  {\n    name: 'Robby',\n    message: 'Hi! Where are you going now?',\n    time: '2m ago',\n    select: false,\n  },\n  {\n    name: 'Annie',\n    message: 'Hello Dux, how are you today?',\n    time: '3m ago',\n    select: false,\n  },\n  {\n    name: 'Andy',\n    message: 'We have a meeting tonight.',\n    time: 'yesterday',\n    select: false,\n  },\n  {\n    name: 'Jack',\n    message: 'Hi Robby, where are you?',\n    time: '2d ago',\n    select: false,\n  },\n  {\n    name: 'Peny',\n    message: 'I will go to school this weekend, how about you?',\n    time: '4d ago',\n    select: false,\n  },\n];\n\nexport default MockLists;\n","import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\n\nimport List from '../models/list';\n\nimport MockLists from '../mock/mock-lists';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ListService {\n\n  public lists: Array<List> = MockLists;\n\n  constructor() { }\n\n  public getLists(): Observable<List[]> {\n    return of(this.lists);\n  }\n\n  public update(list: List): void {\n    // console.log('update', list);\n    this.lists.map((l: List) => {\n      l.select = l.name === list.name && !l.select;\n    });\n  }\n\n  public delete(list: List): Observable<List[]> {\n    // console.log('delete', list);\n    this.lists = this.lists.filter((l: List) => {\n      return l.name !== list.name;\n    });\n    return of(this.lists);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}